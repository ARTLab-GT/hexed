/*! \page error_types Error Types
This page provides, for the end user, an overview of the different types of errors
Hexed might produce, what they mean, and how to address them.

\section hil_exceptions HIL Exceptions
- `hexed::Interpreter::Hil_unhandled_exception`

This indicates that an error was encountered in the \ref hil frontend.
It almost certainly means you made a simple mistake in your input file,
but if you believe it is the result of a bug please let \me know.

\section numerical_errors Numerical Errors
- `hexed::assert::Numerical_exception`

The most frustrating thing about CFD is that no solver is guaranteed to converge for all meshes and all problems.
This error indicates that apparently, you have found a case where this solver does not converge.
For example, it will be thrown if the code encounters NaN values or nonphysical states (e.g. nonpositive density)
and cannot recover.
This error could likely be avoided by improvements to the algorithms or adjustments to your input parameters,
but it is not necessarily the result of a blatant mistake on anyone's part.
If you believe this error is actually the result of a bug or of some inputs you provided that were clearly wrong,
please let \me know.

\section other_exceptions Other Exceptions
- `std::runtime_error`
- Python [builtin exceptions](https://docs.python.org/3/library/exceptions.html)

These errors indicate that something went wrong in a way that I did not specifically anticipate.
It could be the result of a mistake you made, or it could be the result of a bug.
If you obtain one of these errors and it is not at all clear what, if anything, you did wrong,
feel free to let \me know.

\section segfaults Segmentation faults
- `Segmentation fault (core dumpted)`
- `SIGSEGV`

Woah, this is embarrassing. Please let \me know and also laugh at me.

*/
