/*! \mainpage hexed

Welcome to Hexed, a Discontinuous Galerkin CFD solver with automated, unstructured quad/hex meshing!
You are reading the documentation.
For source code, see the [GitHub repository](https://github.com/ARTLab-GT/hexed).

\image html header.png "Temperature (K) contours on a Mach 10 starfish (inviscid, 2D, CPG)."

\section About

__hex__ (_noun_)
1. (technical) abbreviation for "hexahedron", a six-sided solid (e.g., a cube)
2. curse; jinx; evil magic spell

__hex__  (_verb_)
1. to cast a hex

Anyone who has spent a substantial amount of time working with computational fluid dynamics (CFD)
can attest that it is decidedly arcane and sometimes tends toward evil (in the [programming sense](https://isocpp.org/wiki/faq/big-picture#defn-evil) of the word).
As its name suggests, Hexed scarcely presumes to change that.
What it *does* aim to provide is a more accurate and automated solver, enabling you to practice your witchcraft on a previously unattainable scale.
Specifically, it addresses the following problems with conventional CFD:
- Meshing usually takes a lot of the user's time.
  Although automated meshing algorithms exist, they tend to be fragile when applied to complex geometry.
  This is especially true when attempting to generate quad/hex meshes, on which solvers tend to perform better.
- The results are highly dependent on user inputs,
  as there are usually not sufficient computational resources to obtain a fully grid- and time-converged solution.
  User inexperience or insufficient effort can lead to results that look plausible but in fact are completely incorrect.
  For this reason, many engineers distrust CFD.

Hexed (or perhaps "Vexed", as a certain insightful friend suggested it might be more aptly named)
is an all-hex meshing algorithm with a high-order DG solver.
The meshing algorithm has a straightforward geometric interpretation, making it robust to challenging geometries (e.g. small gaps or non-watertight surfaces),
and you can rest assured that whatever output you get results from simple math
and not you, or some sophisticated AI-adjacent algorithm, doing something quirky.
Furthermore, the low-dissipation DG scheme generally gives highly accurate results (when it doesn't blow up),
and when it doesn't, it fails in the form of obviously spurious oscillations.
Thus when you manage to get an answer you can generally be confident in its accuracy.

Hexed is written in C++ and is currently capable of solving the compressible, laminar Navier-Stokes equations for a calorically-perfect gas.
It uses Cartesian meshes with hanging-node refinement, modified to include body-fitted cells at the geometry surface.
In the relatively near future, I hope to include adaptive mesh refinement, moving geometry, and RANS turbulence modeling.

\subsection citing Citing and Usage Guidelines
Hexed is open source under terms specified in the [license](https://github.com/ARTLab-GT/hexed/blob/v0.1.1/LICENSE.txt).
This is Version 0, the prototype.
You are encouraged to study and experiment with it, but it is missing some important features and probably riddled with bugs,
and future versions may include substantial changes to the source code and user interface.
We hope to release a stable and more feature-complete Version 1 in the next year or two.
As a personal request, if you modify or improve this code, please share your work and credit our original version.
We welcome pull requests.
If you use Hexed in any academic research, please cite one or both of the following publications:

Ref. \cite smith-pierce_mesh2024 :
Smith-Pierce, M., Ruffin, S., and Dement, D.,
"Automated Unstructured Quad/Hex Meshing for High-Order Discontinuous Galerkin CFD,"
_AIAA SCITECH 2024 Forum_, 2024. https://doi.org/10.2514/6.2024-0384.
\snippet doc/references.bib mesh_citation

Ref. \cite smith-pierce_solver2024 :
Smith-Pierce, M., Dement, D., and Ruffin, S.,
"A High Order Discontinuous Galerkin Navier-Stokes Solver with Grid-Convergent Artificial Viscosity,"
_AIAA SCITECH 2024 Forum_, 2024. https://doi.org/10.2514/6.2024-2176.
\snippet doc/references.bib solver_citation

\subsection Contact
This code is maintained by Micaiah Smith-Pierce.
I am a PhD student of Professor Stephen Ruffin at the Aerothermodynamics Research and Technology Laboratory (ARTLab),
of the Georgia Tech School of Aerospace Engineering.
If you have any questions or feedback, you can reach me at micaiah@gatech.edu or on [GitHub](https://github.com/micaiah-sp).

_Generated on \today for Hexed \proj_version._

\page guide User/Developer Guide
This pages below provide high-level information about Hexed, including instructions for how to use it and explanations of the concepts behind it.
The rest of the pages (<a href="namespaces.html">Namespaces</a>, <a href="classes.html">Classes</a>, etc)
serve as reference material on the API once you already know what you're doing.

- \subpage installation
- \subpage running
- \subpage hil
- \subpage parameters
- \subpage boundary_conditions
- \subpage error_types
- \subpage mesh_io
- \subpage conventions
- \subpage geom_fitting
- \subpage contributing
- \subpage benchmarking

*/
