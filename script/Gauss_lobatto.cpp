
/*
This file was generated automatically by script/auto_generate.py.
Do not attempt to modify it directly. Instead, modify and rerun script/auto_generate.py
to make the required changes.
*/


#include <Gauss_lobatto.hpp>

namespace cartdg
{

double nodes2 [2] {
0.0, 1.0000000000000000000, 
};

double weights2 [2] {
0.50000000000000000000, 0.50000000000000000000, 
};

double diff_mat2 [4] {
-1.0000000000000000000, -1.0000000000000000000, 
1.0000000000000000000, 1.0000000000000000000, 
};

double nodes3 [3] {
0.0, 0.50000000000000000000, 1.0000000000000000000, 
};

double weights3 [3] {
0.16666666666666666667, 0.66666666666666666667, 0.16666666666666666667, 
};

double diff_mat3 [9] {
-3.0000000000000000000, -1.0000000000000000000, 1.0000000000000000000, 
4.0000000000000000000, 0.0, -4.0000000000000000000, 
-1.0000000000000000000, 1.0000000000000000000, 3.0000000000000000000, 
};

double nodes4 [4] {
0.0, 0.27639320225002103036, 0.72360679774997896964, 1.0000000000000000000, 
};

double weights4 [4] {
0.083333333333333333333, 0.41666666666666666667, 0.41666666666666666667, 0.083333333333333333333, 
};

double diff_mat4 [16] {
-6.0000000000000000000, -1.6180339887498948482, 0.61803398874989484820, -1.0000000000000000000, 
8.0901699437494742410, 1.0691058840368782585E-50, -2.2360679774997896964, 3.0901699437494742410, 
-3.0901699437494742410, 2.2360679774997896964, -1.0691058840368782585E-50, -8.0901699437494742410, 
1.0000000000000000000, -0.61803398874989484820, 1.6180339887498948482, 6.0000000000000000000, 
};

double nodes5 [5] {
0.0, 0.17267316464601142810, 0.50000000000000000000, 0.82732683535398857190, 1.0000000000000000000, 
};

double weights5 [5] {
0.050000000000000000000, 0.27222222222222222222, 0.35555555555555555556, 0.27222222222222222222, 0.050000000000000000000, 
};

double diff_mat5 [25] {
-10.000000000000000000, -2.4819805060619657157, 0.75000000000000000000, -0.51801949393803428430, 1.0000000000000000000, 
13.513004977448480008, 1.6036588260553173877E-50, -2.6731691553909066705, 1.5275252316519466689, -2.8203283558848533256, 
-5.3333333333333333333, 3.4914862437758781003, 0.0, -3.4914862437758781003, 5.3333333333333333333, 
2.8203283558848533256, -1.5275252316519466689, 2.6731691553909066705, -2.1382117680737565169E-50, -13.513004977448480008, 
-1.0000000000000000000, 0.51801949393803428430, -0.75000000000000000000, 2.4819805060619657157, 10.000000000000000000, 
};

double* nodes [4] {
&nodes2[0], &nodes3[0], &nodes4[0], &nodes5[0], 
};


double* weights [4] {
&weights2[0], &weights3[0], &weights4[0], &weights5[0], 
};


double* diff_mats [4] {
&diff_mat2[0], &diff_mat3[0], &diff_mat4[0], &diff_mat5[0], 
};


double Gauss_lobatto::node(int i)
{
  if ((2 > rank) || (rank > 5))
  {
    throw "Not implemented for required rank.";
  }
  return nodes[rank - 2][i];
}

Eigen::VectorXd Gauss_lobatto::node_weights()
{
  if ((2 > rank) || (rank > 5))
  {
    throw "Not implemented for required rank.";
  }
  Eigen::VectorXd nw (rank);
  for (int i_node = 0; i_node < rank; ++i_node) nw(i_node) = weights[rank - 2][i_node];
  return nw;
}

Eigen::MatrixXd Gauss_lobatto::diff_mat()
{
  if ((2 > rank) || (rank > 5))
  {
    throw "Not implemented for required rank.";
  }
  Eigen::MatrixXd dm (rank, rank);
  for (int i_node = 0; i_node < rank*rank; ++i_node) dm(i_node) = diff_mats[rank - 2][i_node];
  return dm;
}

Gauss_lobatto::Gauss_lobatto(int rank_arg) : Basis(rank_arg) {}


}
