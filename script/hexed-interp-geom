#! /usr/bin/python3
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import minimize

#points = np.loadtxt("RAE2822.geom", skiprows=2)
points = np.loadtxt("boeing737_outboard.txt")
n_poly = 10
n_interp = 1000

def cheby(i_poly, param):
    return np.cos(i_poly*np.arccos(param))

def monde(param):
    n_point = param.size
    mat = np.zeros((n_point, n_poly))
    for i_poly in range(n_poly):
        for i_point in range(n_point):
            mat[i_point, i_poly] = cheby(i_poly, param[i_point])
    return mat

param_in = np.linspace(-1, 1, points.shape[0])
#param_in = np.cos(np.linspace(np.pi, 0, points.shape[0]))
def soln(p):
    return np.linalg.lstsq(monde(p), points, rcond=None)
def res(theta):
    return (soln(np.cos(theta))[1]).sum()
min_result = minimize(res, np.arccos(param_in))
print(min_result)
param_in = np.cos(min_result.x)
s = soln(param_in)
coef = s[0]
print(s[1].sum())
param_out = np.linspace(-1, 1, n_interp)
interp = monde(param_out) @ coef
plt.scatter(param_in, points[:, 0], marker="+")
plt.scatter(param_in, points[:, 1], marker="+")
plt.plot(param_out, interp[:, 0], color="k")
plt.plot(param_out, interp[:, 1], color="k")
plt.show()

plt.scatter(points[:, 0], points[:, 1], marker="+")
plt.plot(interp[:, 0], interp[:, 1], color="k")
plt.axis("equal")
plt.show()
